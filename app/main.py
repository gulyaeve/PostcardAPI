from fastapi import FastAPI
from starlette.responses import Response

from utils.postcard_image_generator.postcard_generator import make_postcard

app = FastAPI()


@app.get("/")
async def root():
    return {"message": "Hello World"}


@app.get("/hello/{name}")
async def say_hello(name: str):
    return {"message": f"Hello {name}"}


# @app.get("/postcard/{template}")
# async def get_postcard(template: int):
#     # return {"data": f"postcard_{template}"}
#     html_content = await make_postcard("TEST", template)
#     return HTMLResponse(content=html_content, status_code=200)

@app.get(
    "/postcard/{template}",
    # Set what the media type will be in the autogenerated OpenAPI specification.
    # fastapi.tiangolo.com/advanced/additional-responses/#additional-media-types-for-the-main-response
    responses={
        200: {
            "content": {"image/png": {}}
        }
    },
    # Prevent FastAPI from adding "application/json" as an additional
    # response media type in the autogenerated OpenAPI specification.
    # https://github.com/tiangolo/fastapi/issues/3258
    response_class=Response
)
async def get_postcard(template: int):
    image_bytes: bytes = await make_postcard("TEST", template, "111")
    return Response(content=image_bytes, media_type="image/png")
